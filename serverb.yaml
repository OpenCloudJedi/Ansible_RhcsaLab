---
- name: Building environment for rhcsa Server B
  hosts: serverb
  become: yes
  vars_files: vars/serverb
  tasks:
    - name: install git
      yum:
        name: git
        state: present
    - name: Get register to check if tails_servera.sh already exists in case you have to run this again
      stat:
        path: /home/student/tails_serverb.sh
      register: istails
    - name: Git clone for tails_serverb.sh
      block:
      - name: Gitclone for tails_serverb.sh
        git:
          repo: https://github.com/OpenCloudJedi/PeteTong.git
          dest: /home/student/Project
      - name: Move tails_serverb.sh to /root/
        command: mv /home/student/Project/tails_serverb.sh /home/student/
      - name: Add executable permissions to the tails file    
        command: chmod +x /home/student/tails_serverb.sh
      - name: Remove git clone folder
        file:
          path: /home/student/Project
          state: absent
        # Used git to make this more elegant than just command: wget. That is probably much more elegant than this spaghetti
      when: istails.stat.exists == False
    - name: Change password for root
      user:
        name: root
        password: $6$c2MVZ8kUvpUanKxR$Kpco6Ic33GBZIbrjFgQmBBlm/.u3kpUyyel.OElsimodAdZyRswf0UPE9RwfIwRwm0E//X.4IDLk1ciVUUDL71
        update_password: always
    - name: Change password for student
      user:
        name: student
        password: $6$c2MVZ8kUvpUanKxR$Kpco6Ic33GBZIbrjFgQmBBlm/.u3kpUyyel.OElsimodAdZyRswf0UPE9RwfIwRwm0E//X.4IDLk1ciVUUDL71
        update_password: always
    - name: Make uninviteduser
      user:
        name: "{{ uninviteduser }}"
        state: present
        home: /home-directories/{{ uninviteduser }}
    - name: Make "{{ existingmountpoint }}"
      file:
        path: "{{ existingmountpoint }}"
        state: directory
    - name: Install autofs
      yum:
        name: autofs
        state: installed
    - name: Change tuned profiles to something else pt1
      copy:
        content: throughput-performance
        dest: "{{ item }}"
      loop:
        - /etc/tuned/active_profile
        - /etc/tuned/profile_mode
    - name: Parted 3 partitions 1st
      parted:
        device: /dev/vdb
        number: 1
        part_end: "{{ vdb_partsize }}"
        state: present
        part_type: primary
    - name: Parted 3 partitions 2nd
      parted:
        device: /dev/vdb
        number: 2
        part_end: 1024MiB
        state: present
        part_type: primary
        part_start: 257MiB
    - name: Partprobe
      command: partprobe
    - name: Mkswap for /dev/vdb1
      command: mkswap /dev/vdb1
    - name: Create VG "{{ existingvgname }}"
      community.general.lvg:
        vg: "{{ existingvgname }}"
        pvs: /dev/vdb2
        pesize: "{{ existingpesize }}"
    - name: Create LV "{{ existinglvname }}"
      community.general.lvol:
        lv: "{{ existinglvname }}"
        size: "{{ existinglvsize }}"
        state: present
        vg: "{{ existingvgname }}"
    - name: Make the LV have "{{ existingfstype }}"
      community.general.filesystem:
        dev: /dev/{{ existingvgname }}/{{ existinglvname }}
        fstype: "{{ existingfstype }}"
        state: present
    - name: Edit default grub
      lineinfile:
        regexp: ^TIMEOUT=
        line: TIMEOUT=20
        state: present
        path: /etc/default/grub
    - name: Update grub timeout
      command: grub2-mkconfig > /boot/grub2/grub.cfg
    - name: Add our VG and swap to /etc/fstab
      blockinfile:
        path: /etc/fstab
        block: |
            /dev/vdb1 swap  swap  defaults  0 0
            /dev/{{ existingvgname }}/{{ existinglvname }}  {{ existingmountpoint }}  {{ existingfstype }} defaults 0 0
    - name: Swapon
      command: swapon -a


